# Arc Time-Series Database Output Plugin
# High-performance MessagePack binary protocol (3-5x faster than line protocol)
[[outputs.arc]]
  ## Arc MessagePack API URL
  ## The endpoint where Arc is listening for MessagePack writes
  url = "http://localhost:8000/api/v1/write/msgpack"

  ## Timeout for HTTP writes
  # timeout = "5s"

  ## API Key for authentication
  ## Generate an API key in Arc with write permissions
  ## Example: python3 cli.py auth create-token --name telegraf --permissions write
  # api_key = "your-arc-api-key-here"

  ## Database name for multi-database architecture (optional)
  ## Routes metrics to a specific database namespace
  ## Examples: "production", "staging", "development", "default"
  ## If not specified, Arc uses the default database configured in arc.conf
  # database = "production"

  ## HTTP User-Agent
  # user_agent = "Telegraf-Arc-Output-Plugin"

  ## Content encoding for request body
  ## Options: "gzip" (default, recommended), "identity" (no compression)
  ## Gzip compression reduces network bandwidth by ~10x
  # content_encoding = "gzip"

  ## Batch size for MessagePack writes
  ## Higher values improve throughput but use more memory
  # batch_size = 1000

  ## Additional HTTP headers
  # [outputs.arc.headers]
  #   X-Custom-Header = "custom-value"

  ## Arc uses MessagePack binary protocol with columnar format for maximum performance
  ## Columnar format (2.66x faster than row format):
  ##   {
  ##     "m": "cpu",              # measurement name
  ##     "columns": {             # all data organized as columns (arrays)
  ##       "time": [1633024800000, 1633024801000, 1633024802000],
  ##       "host": ["server01", "server02", "server03"],
  ##       "region": ["us-east", "us-west", "eu-central"],
  ##       "usage_idle": [95.0, 85.0, 92.0],
  ##       "usage_user": [3.2, 10.5, 5.8]
  ##     }
  ##   }
